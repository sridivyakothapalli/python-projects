# -*- coding: utf-8 -*-
"""case_Study_pandas.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zmXdDBXix809wEQZJjBz7XnTqCZfRkFE
"""

import pandas as pd

x=pd.Series(list(range(11)))
x

y=pd.Series([1,2,3,4,5,6,7,8,9,10])
y

def range_series():
  a=int(input("enter start of range"))
  b=int(input("end of range"))
  return print(pd.Series(list(range(a,b))))

range_series()

def range_series(a,b):
  a=5
  b=b+6
  return print(pd.Series(list(range(a,b))))
range_series(0,5)



class range_series_no_parameters:
  def range_series_p():
   a=0
   b=11
   return print(pd.Series(list(range(a,b))))
class range_series_with_parameters(range_series_no_parameters):
 def range_series(a,b):
  a=5
  b=b+5
  return print(pd.Series(list(range(a,b))))

num_series=pd.Series(list(range(int(input("enter start of range")),int(input("end of range")))))
print(num_series)

import numpy as np

count=int(input("enter no. of arrays"))
i=1
sum_array=0
for i in range(i,count+1):
  def arr():
    x=int(input(f"enter array{i} start"))
    y=int(input(f"enter array{i} end"))
    a=np.arange(x,y)
    b=np.sum(a)
    return print(a,b)
  arr()
  i=i+1

44
def arr():
  x=int(input(f"enter array{i} start"))
  y=int(input(f"ente6r array{i} end"))
  a=np.arange(x,y)
  b=np.sum(a)
  sum_array=b
  return print(a,b)
arr()

a=arr()
a

"""**Create a function that takes in two lists named keys and values as
arguments
**

"""

def dict1(a,b):
  a=list(input(range(x,y)))

return pd.DataFrame({})

df=pd.DataFrame({"a":[1,2,3],
                 "b":[4,5,6]})
df.keys()

x=df.values
x,type(x)

z=df.items()
z

dict2={"a":[1,2,3],
 "b":[4,5,6]}
dict2

dict2.keys()

dict2.values()

dict2.items()

def df(a,b):
  x=int(input("enter start of range"))
  y=int(input("enter end of range"))
  a=list(range(x,y))
  b=list()

list1=list(np.array(["one","two","three"]))
list2=list(np.array([[1,2,3],[3,4,5]]))
df=pd.DataFrame(list2,columns=list1)
df

"""*Create a function that takes in two lists named keys and values as
arguments,create df with lists*
"""

def df1():
  list1=[]
  s=int(input("enter no.col"))
  for i in range(s):
    cn=str(input("enter colname"))
    list1.append(cn)
  list2=[]
  n=int(input("enter size"))
  for j in range(n):
    nested_list=[]
    for k in range(s):
      a=int(input("enter values"))
      nested_list.append(a)
    list2.append(nested_list)

  return pd.DataFrame(list2,columns=list1)

df1()

3
n=int(input("enter no. of columns"))
  b=list(list(range(n)))
  for i in range(i,n):
    n=str(input("enter coulumn names"))
    a[i]=n
  print(a)

list1=[]
s=int(input("enter no.col"))
for i in range(s):
  cn=str(input("enter colname"))
  list1.append(cn)
print(list1)

list2=[]
n=int(input("enter size"))
for j in range(j,n):
  nested_list=[]
  for k in range(n):
    a=int(input("enter values"))
    nested_list.append(a)

  list2.append(nested_list)

print(list2)

"""*Create a function that concatenates two DataFrames. Use a previously
created function to create two DataFrames and pass them as parameters
Make sure that the indexes are reset before returning.
*
"""

def concat_df():
  df2=df1()
  df3=df1()
  print(pd.concat([df2,df3],ignore_index=True,axis=0))

concat_df()

"""*Write code to load data from cars.csv into a dataframe and print its details.
Details like: 'count', 'mean', 'std', 'min', '25%', '50%', '75%', 'max'.
*
"""

from google.colab import files
upload=files.upload()

cars=pd.read_csv('cars.csv')

cars.head()

cars.info()

cars['hp'].aggregate(['sum','mean','min','max','average'])

cars['hp'].sum(25)

